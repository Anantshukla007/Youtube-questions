#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    bool check(long long int k, vector<int>& b, long long int h) {
        long long int sum = 0;
        for (int i = 0; i < b.size(); i++) {
            if (b[i] % k == 0) {
                sum += (b[i] / k);
            } else {
                sum += (b[i] / k) + 1;
            }
        }
        return sum <= h;
    }
    
    int minEatingSpeed(vector<int>& b, int h) {
        long long int tr = 0;
        for (int i = 0; i < b.size(); i++) {
            tr = max(tr, (long long int)b[i]);
        }
        
        long long int low = 1, high = tr, u = 1, answer = -1;
        while (low <= high && u == 1) {
            long long int mid = (low + high) / 2;
            if (check(mid, b, h) == false) {
                low = mid + 1;
            } else {
                if(mid==1){
                    answer = 1 ;
                    u = 0 ; 
                }
                else if (check(mid - 1, b, h) == false) {
                    answer = mid;
                    u = 0;
                } else {
                    high = mid - 1;
                }
            }
        }
        return answer;
    }
};
